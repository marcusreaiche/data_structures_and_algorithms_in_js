var displayTree = (tree) => console.log(JSON.stringify(tree, null, 2));
function Node(value) {
  this.value = value;
  this.left = null;
  this.right = null;
}
function BinarySearchTree() {
  this.root = null;
  // change code below this line
  this.invert = function(node=this.root) {
    if(this.root === null) return null;
    if(node) {
      [node.left, node.right] = [node.right, node.left];
      if(node.left) {
        this.invert(node.left);
      }
      if(node.right) {
        this.invert(node.right);
      }
    }
  }
  // change code above this line
  this.add = function(element, node=this.root) {
    const newNode = new Node(element);
    if(!node) {
      // root is empty
      this.root = newNode;
    }
    else if(node.value > element) {
      if (node.left === null) {
        node.left = newNode;
      }
      else {
        this.add(element, node.left);
      }
    }
    else if(node.value < element) {
      if (node.right === null) {
        node.right = newNode;
      }
      else {
        this.add(element, node.right);
      }
    }
    else{
      return null;
    }
  }
}
const bst = new BinarySearchTree();
bst.add(8);
bst.add(2);
bst.add(10);
bst.add(1);
bst.add(4);
bst.add(3);
bst.add(10);
bst.add(13);
displayTree(bst);
bst.invert()
displayTree(bst);
