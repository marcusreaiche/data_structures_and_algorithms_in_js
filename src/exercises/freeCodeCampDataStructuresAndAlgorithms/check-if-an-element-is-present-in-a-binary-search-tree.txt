var displayTree = tree => console.log(JSON.stringify(tree, null, 2));
function Node(value) {
  this.value = value;
  this.left = null;
  this.right = null;
}
function BinarySearchTree() {
  this.root = null;
  // change code below this line
  this.isPresent = function(value, node=this.root) {
    if(!node) return false;
    if(node.value === value) {
      return true;
    }
    else if(node.value > value) {
      return this.isPresent(value, node.left);
    }
    else {
      return this.isPresent(value, node.right);
    }
  }
  // change code above this line
  this.add = function(element, node=this.root) {
    const newNode = new Node(element);
    if(!node) {
      // root is empty
      this.root = newNode;
    }
    else if(node.value > element) {
      if (node.left === null) {
        node.left = newNode;
      }
      else {
        this.add(element, node.left);
      }
    }
    else if(node.value < element) {
      if (node.right === null) {
        node.right = newNode;
      }
      else {
        this.add(element, node.right);
      }
    }
    else{
      return null;
    }
  }
}
const bst = new BinarySearchTree();
bst.add(8);
bst.add(3);
bst.add(10);
bst.add(1);
bst.add(6);
bst.add(4);
bst.add(7);
bst.add(10);
bst.add(14);
bst.add(13);
console.log(bst.isPresent(1));
console.log(bst.isPresent(100));